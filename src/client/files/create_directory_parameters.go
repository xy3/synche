// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCreateDirectoryParams creates a new CreateDirectoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateDirectoryParams() *CreateDirectoryParams {
	return &CreateDirectoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDirectoryParamsWithTimeout creates a new CreateDirectoryParams object
// with the ability to set a timeout on a request.
func NewCreateDirectoryParamsWithTimeout(timeout time.Duration) *CreateDirectoryParams {
	return &CreateDirectoryParams{
		timeout: timeout,
	}
}

// NewCreateDirectoryParamsWithContext creates a new CreateDirectoryParams object
// with the ability to set a context for a request.
func NewCreateDirectoryParamsWithContext(ctx context.Context) *CreateDirectoryParams {
	return &CreateDirectoryParams{
		Context: ctx,
	}
}

// NewCreateDirectoryParamsWithHTTPClient creates a new CreateDirectoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateDirectoryParamsWithHTTPClient(client *http.Client) *CreateDirectoryParams {
	return &CreateDirectoryParams{
		HTTPClient: client,
	}
}

/* CreateDirectoryParams contains all the parameters to send to the API endpoint
   for the create directory operation.

   Typically these are written to a http.Request.
*/
type CreateDirectoryParams struct {

	/* DirectoryName.

	   the name of the new directory
	*/
	DirectoryName string

	/* ParentDirectoryID.

	   the ID of the parent directory, no ID means the directory is created the user's home directory

	   Format: uint
	*/
	ParentDirectoryID *uint64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create directory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateDirectoryParams) WithDefaults() *CreateDirectoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create directory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateDirectoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create directory params
func (o *CreateDirectoryParams) WithTimeout(timeout time.Duration) *CreateDirectoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create directory params
func (o *CreateDirectoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create directory params
func (o *CreateDirectoryParams) WithContext(ctx context.Context) *CreateDirectoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create directory params
func (o *CreateDirectoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create directory params
func (o *CreateDirectoryParams) WithHTTPClient(client *http.Client) *CreateDirectoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create directory params
func (o *CreateDirectoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDirectoryName adds the directoryName to the create directory params
func (o *CreateDirectoryParams) WithDirectoryName(directoryName string) *CreateDirectoryParams {
	o.SetDirectoryName(directoryName)
	return o
}

// SetDirectoryName adds the directoryName to the create directory params
func (o *CreateDirectoryParams) SetDirectoryName(directoryName string) {
	o.DirectoryName = directoryName
}

// WithParentDirectoryID adds the parentDirectoryID to the create directory params
func (o *CreateDirectoryParams) WithParentDirectoryID(parentDirectoryID *uint64) *CreateDirectoryParams {
	o.SetParentDirectoryID(parentDirectoryID)
	return o
}

// SetParentDirectoryID adds the parentDirectoryId to the create directory params
func (o *CreateDirectoryParams) SetParentDirectoryID(parentDirectoryID *uint64) {
	o.ParentDirectoryID = parentDirectoryID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDirectoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param directoryName
	qrDirectoryName := o.DirectoryName
	qDirectoryName := qrDirectoryName
	if qDirectoryName != "" {

		if err := r.SetQueryParam("directoryName", qDirectoryName); err != nil {
			return err
		}
	}

	if o.ParentDirectoryID != nil {

		// query param parentDirectoryID
		var qrParentDirectoryID uint64

		if o.ParentDirectoryID != nil {
			qrParentDirectoryID = *o.ParentDirectoryID
		}
		qParentDirectoryID := swag.FormatUint64(qrParentDirectoryID)
		if qParentDirectoryID != "" {

			if err := r.SetQueryParam("parentDirectoryID", qParentDirectoryID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
