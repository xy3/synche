// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/xy3/synche/src/models"
)

// GetFilePathInfoReader is a Reader for the GetFilePathInfo structure.
type GetFilePathInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFilePathInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFilePathInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFilePathInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFilePathInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFilePathInfoOK creates a GetFilePathInfoOK with default headers values
func NewGetFilePathInfoOK() *GetFilePathInfoOK {
	return &GetFilePathInfoOK{}
}

/* GetFilePathInfoOK describes a response with status code 200, with default header values.

OK
*/
type GetFilePathInfoOK struct {
	Payload *models.File
}

func (o *GetFilePathInfoOK) Error() string {
	return fmt.Sprintf("[GET /home/{filePath}][%d] getFilePathInfoOK  %+v", 200, o.Payload)
}
func (o *GetFilePathInfoOK) GetPayload() *models.File {
	return o.Payload
}

func (o *GetFilePathInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.File)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePathInfoUnauthorized creates a GetFilePathInfoUnauthorized with default headers values
func NewGetFilePathInfoUnauthorized() *GetFilePathInfoUnauthorized {
	return &GetFilePathInfoUnauthorized{}
}

/* GetFilePathInfoUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFilePathInfoUnauthorized struct {
}

func (o *GetFilePathInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /home/{filePath}][%d] getFilePathInfoUnauthorized ", 401)
}

func (o *GetFilePathInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFilePathInfoNotFound creates a GetFilePathInfoNotFound with default headers values
func NewGetFilePathInfoNotFound() *GetFilePathInfoNotFound {
	return &GetFilePathInfoNotFound{}
}

/* GetFilePathInfoNotFound describes a response with status code 404, with default header values.

File not found
*/
type GetFilePathInfoNotFound struct {
}

func (o *GetFilePathInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /home/{filePath}][%d] getFilePathInfoNotFound ", 404)
}

func (o *GetFilePathInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
