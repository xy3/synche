// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/xy3/synche/src/client/models"
)

// ListDirectoryReader is a Reader for the ListDirectory structure.
type ListDirectoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDirectoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDirectoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDirectoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListDirectoryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListDirectoryOK creates a ListDirectoryOK with default headers values
func NewListDirectoryOK() *ListDirectoryOK {
	return &ListDirectoryOK{}
}

/* ListDirectoryOK describes a response with status code 200, with default header values.

OK
*/
type ListDirectoryOK struct {
	Payload *models.DirectoryContents
}

func (o *ListDirectoryOK) Error() string {
	return fmt.Sprintf("[GET /directory/{id}][%d] listDirectoryOK  %+v", 200, o.Payload)
}
func (o *ListDirectoryOK) GetPayload() *models.DirectoryContents {
	return o.Payload
}

func (o *ListDirectoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryContents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDirectoryUnauthorized creates a ListDirectoryUnauthorized with default headers values
func NewListDirectoryUnauthorized() *ListDirectoryUnauthorized {
	return &ListDirectoryUnauthorized{}
}

/* ListDirectoryUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListDirectoryUnauthorized struct {
}

func (o *ListDirectoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /directory/{id}][%d] listDirectoryUnauthorized ", 401)
}

func (o *ListDirectoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDirectoryDefault creates a ListDirectoryDefault with default headers values
func NewListDirectoryDefault(code int) *ListDirectoryDefault {
	return &ListDirectoryDefault{
		_statusCode: code,
	}
}

/* ListDirectoryDefault describes a response with status code -1, with default header values.

Error
*/
type ListDirectoryDefault struct {
	_statusCode int

	Payload models.Error
}

// Code gets the status code for the list directory default response
func (o *ListDirectoryDefault) Code() int {
	return o._statusCode
}

func (o *ListDirectoryDefault) Error() string {
	return fmt.Sprintf("[GET /directory/{id}][%d] listDirectory default  %+v", o._statusCode, o.Payload)
}
func (o *ListDirectoryDefault) GetPayload() models.Error {
	return o.Payload
}

func (o *ListDirectoryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
