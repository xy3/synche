// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/xy3/synche/src/models"
)

// ListDirPathInfoReader is a Reader for the ListDirPathInfo structure.
type ListDirPathInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDirPathInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDirPathInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDirPathInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListDirPathInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListDirPathInfoOK creates a ListDirPathInfoOK with default headers values
func NewListDirPathInfoOK() *ListDirPathInfoOK {
	return &ListDirPathInfoOK{}
}

/* ListDirPathInfoOK describes a response with status code 200, with default header values.

OK
*/
type ListDirPathInfoOK struct {
	Payload *models.DirectoryContents
}

func (o *ListDirPathInfoOK) Error() string {
	return fmt.Sprintf("[GET /directoryPath/{dirPath}][%d] listDirPathInfoOK  %+v", 200, o.Payload)
}
func (o *ListDirPathInfoOK) GetPayload() *models.DirectoryContents {
	return o.Payload
}

func (o *ListDirPathInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryContents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDirPathInfoUnauthorized creates a ListDirPathInfoUnauthorized with default headers values
func NewListDirPathInfoUnauthorized() *ListDirPathInfoUnauthorized {
	return &ListDirPathInfoUnauthorized{}
}

/* ListDirPathInfoUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListDirPathInfoUnauthorized struct {
}

func (o *ListDirPathInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /directoryPath/{dirPath}][%d] listDirPathInfoUnauthorized ", 401)
}

func (o *ListDirPathInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDirPathInfoDefault creates a ListDirPathInfoDefault with default headers values
func NewListDirPathInfoDefault(code int) *ListDirPathInfoDefault {
	return &ListDirPathInfoDefault{
		_statusCode: code,
	}
}

/* ListDirPathInfoDefault describes a response with status code -1, with default header values.

Error
*/
type ListDirPathInfoDefault struct {
	_statusCode int

	Payload models.Error
}

// Code gets the status code for the list dir path info default response
func (o *ListDirPathInfoDefault) Code() int {
	return o._statusCode
}

func (o *ListDirPathInfoDefault) Error() string {
	return fmt.Sprintf("[GET /directoryPath/{dirPath}][%d] listDirPathInfo default  %+v", o._statusCode, o.Payload)
}
func (o *ListDirPathInfoDefault) GetPayload() models.Error {
	return o.Payload
}

func (o *ListDirPathInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
