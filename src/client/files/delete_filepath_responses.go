// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/xy3/synche/src/client/models"
)

// DeleteFilepathReader is a Reader for the DeleteFilepath structure.
type DeleteFilepathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFilepathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteFilepathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteFilepathDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteFilepathOK creates a DeleteFilepathOK with default headers values
func NewDeleteFilepathOK() *DeleteFilepathOK {
	return &DeleteFilepathOK{}
}

/* DeleteFilepathOK describes a response with status code 200, with default header values.

Deleted
*/
type DeleteFilepathOK struct {
}

func (o *DeleteFilepathOK) Error() string {
	return fmt.Sprintf("[DELETE /home/{filePath}][%d] deleteFilepathOK ", 200)
}

func (o *DeleteFilepathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFilepathDefault creates a DeleteFilepathDefault with default headers values
func NewDeleteFilepathDefault(code int) *DeleteFilepathDefault {
	return &DeleteFilepathDefault{
		_statusCode: code,
	}
}

/* DeleteFilepathDefault describes a response with status code -1, with default header values.

Error
*/
type DeleteFilepathDefault struct {
	_statusCode int

	Payload models.Error
}

// Code gets the status code for the delete filepath default response
func (o *DeleteFilepathDefault) Code() int {
	return o._statusCode
}

func (o *DeleteFilepathDefault) Error() string {
	return fmt.Sprintf("[DELETE /home/{filePath}][%d] deleteFilepath default  %+v", o._statusCode, o.Payload)
}
func (o *DeleteFilepathDefault) GetPayload() models.Error {
	return o.Payload
}

func (o *DeleteFilepathDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
